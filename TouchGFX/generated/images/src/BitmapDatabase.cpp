// 4.17.0 0xad658bc1
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_back_dark[]; // BITMAP_BACK_DARK_ID = 0, Size: 48x48 pixels
extern const unsigned char image_back_light[]; // BITMAP_BACK_LIGHT_ID = 1, Size: 48x48 pixels
extern const unsigned char image_co2_dark[]; // BITMAP_CO2_DARK_ID = 2, Size: 64x64 pixels
extern const unsigned char image_co2_light[]; // BITMAP_CO2_LIGHT_ID = 3, Size: 64x64 pixels
extern const unsigned char image_dark_pageindicator_dot_indicator_small_highlight[]; // BITMAP_DARK_PAGEINDICATOR_DOT_INDICATOR_SMALL_HIGHLIGHT_ID = 4, Size: 15x15 pixels
extern const unsigned char image_dark_pageindicator_dot_indicator_small_normal[]; // BITMAP_DARK_PAGEINDICATOR_DOT_INDICATOR_SMALL_NORMAL_ID = 5, Size: 15x15 pixels
extern const unsigned char image_hum_dark[]; // BITMAP_HUM_DARK_ID = 6, Size: 64x64 pixels
extern const unsigned char image_hum_light[]; // BITMAP_HUM_LIGHT_ID = 7, Size: 64x64 pixels
extern const unsigned char image_iaq_dark[]; // BITMAP_IAQ_DARK_ID = 8, Size: 64x64 pixels
extern const unsigned char image_iaq_light[]; // BITMAP_IAQ_LIGHT_ID = 9, Size: 64x64 pixels
extern const unsigned char image_live_dark[]; // BITMAP_LIVE_DARK_ID = 10, Size: 64x64 pixels
extern const unsigned char image_live_light[]; // BITMAP_LIVE_LIGHT_ID = 11, Size: 64x64 pixels
extern const unsigned char image_onboard_screen_bad[]; // BITMAP_ONBOARD_SCREEN_BAD_ID = 12, Size: 250x250 pixels
extern const unsigned char image_onboard_screen_good[]; // BITMAP_ONBOARD_SCREEN_GOOD_ID = 13, Size: 250x250 pixels
extern const unsigned char image_onboard_screen_moderate[]; // BITMAP_ONBOARD_SCREEN_MODERATE_ID = 14, Size: 250x250 pixels
extern const unsigned char image_onboard_screen_pressure[]; // BITMAP_ONBOARD_SCREEN_PRESSURE_ID = 15, Size: 250x250 pixels
extern const unsigned char image_onboard_screen_wait[]; // BITMAP_ONBOARD_SCREEN_WAIT_ID = 16, Size: 250x250 pixels
extern const unsigned char image_pres_dark[]; // BITMAP_PRES_DARK_ID = 17, Size: 64x64 pixels
extern const unsigned char image_pres_light[]; // BITMAP_PRES_LIGHT_ID = 18, Size: 64x64 pixels
extern const unsigned char image_temp_dark[]; // BITMAP_TEMP_DARK_ID = 19, Size: 64x64 pixels
extern const unsigned char image_temp_light[]; // BITMAP_TEMP_LIGHT_ID = 20, Size: 64x64 pixels
extern const unsigned char image_voc_dark[]; // BITMAP_VOC_DARK_ID = 21, Size: 64x64 pixels
extern const unsigned char image_voc_light[]; // BITMAP_VOC_LIGHT_ID = 22, Size: 64x64 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_back_dark, 0, 48, 48, 17, 17, 5, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 13, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_back_light, 0, 48, 48, 18, 19, 5, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 11, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_co2_dark, 0, 64, 64, 14, 48, 38, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_co2_light, 0, 64, 64, 16, 49, 32, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_pageindicator_dot_indicator_small_highlight, 0, 15, 15, 3, 3, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_pageindicator_dot_indicator_small_normal, 0, 15, 15, 3, 3, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_hum_dark, 0, 64, 64, 50, 31, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 12, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_hum_light, 0, 64, 64, 50, 31, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 12, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_iaq_dark, 0, 64, 64, 0, 30, 52, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 5, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_iaq_light, 0, 64, 64, 0, 30, 52, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 5, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_live_dark, 0, 64, 64, 25, 25, 14, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 14, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_live_light, 0, 64, 64, 25, 24, 14, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 16, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_onboard_screen_bad, 0, 250, 250, 221, 81, 20, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 89, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_onboard_screen_good, 0, 250, 250, 221, 81, 20, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 89, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_onboard_screen_moderate, 0, 250, 250, 10, 80, 19, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 91, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_onboard_screen_pressure, 0, 250, 250, 221, 81, 20, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 89, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_onboard_screen_wait, 0, 250, 250, 221, 81, 20, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 89, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_pres_dark, 0, 64, 64, 30, 26, 8, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 8, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_pres_light, 0, 64, 64, 30, 26, 8, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 8, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_temp_dark, 0, 64, 64, 38, 8, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 32, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_temp_light, 0, 64, 64, 38, 8, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 32, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_voc_dark, 0, 64, 64, 34, 21, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_voc_light, 0, 64, 64, 34, 21, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
